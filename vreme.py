import streamlit as st
import pandas as pd
import requests
from datetime import datetime
import plotly.express as px

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_KEY = "4a52e4f76c6dd2875d8afec3fc6ec215"
CITY = "Plovdiv"
URL = f"https://api.openweathermap.org/data/2.5/forecast?q={CITY}&appid={API_KEY}&units=metric"

# –ù–æ—Ä–º–∞–ª–Ω–∏ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏ –∑–∞ –º–µ—Å–µ—Ü–∏
NORMALS = {
    "April": {"temp": 14, "rain_days": 7},
    "May": {"temp": 18, "rain_days": 9}
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞ –∏–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –ø—Ä–æ–≥–Ω–æ–∑–Ω–∏ –º–µ—Ç–µ–æ –¥–∞–Ω–Ω–∏
def get_weather_data():
    response = requests.get(URL)
    data = response.json()
    weather = []

    for entry in data["list"]:
        date = datetime.fromtimestamp(entry["dt"]).date()
        temp = entry["main"]["temp"]
        rain = entry.get("rain", {}).get("3h", 0)
        humidity = entry["main"]["humidity"]
        weather.append({
            "date": date,
            "temp": temp,
            "rain": rain,
            "humidity": humidity
        })

    df = pd.DataFrame(weather)
    df = df.groupby("date").agg({
        "temp": "mean",
        "rain": "sum",
        "humidity": "mean"
    })
    return df

# –û—Å–Ω–æ–≤–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
st.title("–ú–µ—Ç–µ–æ –∞–Ω–∞–ª–∏–∑ –∑–∞ –ü–ª–æ–≤–¥–∏–≤ üåç")
st.write("–ê–Ω–∞–ª–∏–∑ –Ω–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏—Ç–µ –∏ –≤–∞–ª–µ–∂–∏—Ç–µ —Å–ø—Ä—è–º–æ –Ω–æ—Ä–º–∏—Ç–µ –∑–∞ –º–µ—Å–µ—Ü–∞.")

# –ò–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏
st.header("1. –î–∞–Ω–Ω–∏ –∑–∞ –≤—Ä–µ–º–µ—Ç–æ")
st.write("–ò–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏ –æ—Ç OpenWeatherMap –∑–∞ –ü–ª–æ–≤–¥–∏–≤.")
weather_df = get_weather_data()
st.dataframe(weather_df)

# –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
st.header("2. –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ –¥–∞–Ω–Ω–∏—Ç–µ")
fig_temp = px.line(weather_df, x=weather_df.index, y="temp", title="–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ –¥–Ω–∏ (¬∞C)")
fig_rain = px.bar(weather_df, x=weather_df.index, y="rain", title="–í–∞–ª–µ–∂–∏ –ø–æ –¥–Ω–∏ (mm)")
st.plotly_chart(fig_temp)
st.plotly_chart(fig_rain)

# –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –Ω–æ—Ä–º–∏—Ç–µ
st.header("3. –ê–Ω–∞–ª–∏–∑ –Ω–∞ –≤—Ä–µ–º–µ—Ç–æ —Å–ø—Ä—è–º–æ –Ω–æ—Ä–º–∏—Ç–µ")
current_month = datetime.now().strftime("%B")
avg_temp = weather_df["temp"].mean()
rain_days = (weather_df["rain"] > 0).sum()

st.write(f"–°—Ä–µ–¥–Ω–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–∞ {current_month}: {avg_temp:.1f}¬∞C")
st.write(f"–î–Ω–∏ —Å –≤–∞–ª–µ–∂–∏: {rain_days}")

if avg_temp > NORMALS[current_month]["temp"] + 2:
    st.warning("‚ö†Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏—Ç–µ —Å–∞ –Ω–µ–æ–±–∏—á–∞–π–Ω–æ –≤–∏—Å–æ–∫–∏!")
else:
    st.success("‚úÖ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏—Ç–µ —Å–∞ –≤ –Ω–æ—Ä–º–∞.")

if rain_days > NORMALS[current_month]["rain_days"]:
    st.warning("‚ö†Ô∏è –ò–º–∞ –ø–æ–≤–µ—á–µ –¥—ä–∂–¥–æ–≤–Ω–∏ –¥–Ω–∏ –æ—Ç –æ–±–∏—á–∞–π–Ω–æ—Ç–æ!")
else:
    st.success("‚úÖ –í–∞–ª–µ–∂–∏—Ç–µ —Å–∞ –≤ –Ω–æ—Ä–º–∞.")
